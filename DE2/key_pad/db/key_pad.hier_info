|top
clk => clk~0.IN2
rst_n => rst_n~0.IN10
col[0] <= key_pad:k1.col
col[1] <= key_pad:k1.col
col[2] <= key_pad:k1.col
col[3] <= key_pad:k1.col
row[0] => row[0]~3.IN1
row[1] => row[1]~2.IN1
row[2] => row[2]~1.IN1
row[3] => row[3]~0.IN1
hex0[0] <= seg7:s0.hex
hex0[1] <= seg7:s0.hex
hex0[2] <= seg7:s0.hex
hex0[3] <= seg7:s0.hex
hex0[4] <= seg7:s0.hex
hex0[5] <= seg7:s0.hex
hex0[6] <= seg7:s0.hex
hex1[0] <= seg7:s1.hex
hex1[1] <= seg7:s1.hex
hex1[2] <= seg7:s1.hex
hex1[3] <= seg7:s1.hex
hex1[4] <= seg7:s1.hex
hex1[5] <= seg7:s1.hex
hex1[6] <= seg7:s1.hex
hex2[0] <= seg7:s2.hex
hex2[1] <= seg7:s2.hex
hex2[2] <= seg7:s2.hex
hex2[3] <= seg7:s2.hex
hex2[4] <= seg7:s2.hex
hex2[5] <= seg7:s2.hex
hex2[6] <= seg7:s2.hex
hex3[0] <= seg7:s3.hex
hex3[1] <= seg7:s3.hex
hex3[2] <= seg7:s3.hex
hex3[3] <= seg7:s3.hex
hex3[4] <= seg7:s3.hex
hex3[5] <= seg7:s3.hex
hex3[6] <= seg7:s3.hex
hex4[0] <= seg7:s4.hex
hex4[1] <= seg7:s4.hex
hex4[2] <= seg7:s4.hex
hex4[3] <= seg7:s4.hex
hex4[4] <= seg7:s4.hex
hex4[5] <= seg7:s4.hex
hex4[6] <= seg7:s4.hex
hex5[0] <= seg7:s5.hex
hex5[1] <= seg7:s5.hex
hex5[2] <= seg7:s5.hex
hex5[3] <= seg7:s5.hex
hex5[4] <= seg7:s5.hex
hex5[5] <= seg7:s5.hex
hex5[6] <= seg7:s5.hex
hex6[0] <= seg7:s6.hex
hex6[1] <= seg7:s6.hex
hex6[2] <= seg7:s6.hex
hex6[3] <= seg7:s6.hex
hex6[4] <= seg7:s6.hex
hex6[5] <= seg7:s6.hex
hex6[6] <= seg7:s6.hex
hex7[0] <= seg7:s7.hex
hex7[1] <= seg7:s7.hex
hex7[2] <= seg7:s7.hex
hex7[3] <= seg7:s7.hex
hex7[4] <= seg7:s7.hex
hex7[5] <= seg7:s7.hex
hex7[6] <= seg7:s7.hex


|top|key_pad:k1
clk => count[31].CLK
clk => count[30].CLK
clk => count[29].CLK
clk => count[28].CLK
clk => count[27].CLK
clk => count[26].CLK
clk => count[25].CLK
clk => count[24].CLK
clk => count[23].CLK
clk => count[22].CLK
clk => count[21].CLK
clk => count[20].CLK
clk => count[19].CLK
clk => count[18].CLK
clk => count[17].CLK
clk => count[16].CLK
clk => count[15].CLK
clk => count[14].CLK
clk => count[13].CLK
clk => count[12].CLK
clk => count[11].CLK
clk => count[10].CLK
clk => count[9].CLK
clk => count[8].CLK
clk => count[7].CLK
clk => count[6].CLK
clk => count[5].CLK
clk => count[4].CLK
clk => count[3].CLK
clk => count[2].CLK
clk => count[1].CLK
clk => count[0].CLK
clk => col[3]~reg0.CLK
clk => col[2]~reg0.CLK
clk => col[1]~reg0.CLK
clk => col[0]~reg0.CLK
clk => cnt_key[7].CLK
clk => cnt_key[6].CLK
clk => cnt_key[5].CLK
clk => cnt_key[4].CLK
clk => cnt_key[3].CLK
clk => cnt_key[2].CLK
clk => cnt_key[1].CLK
clk => cnt_key[0].CLK
clk => flag~reg0.CLK
clk => row_col[7].CLK
clk => row_col[6].CLK
clk => row_col[5].CLK
clk => row_col[4].CLK
clk => row_col[3].CLK
clk => row_col[2].CLK
clk => row_col[1].CLK
clk => row_col[0].CLK
rst_n => row_col[0].ACLR
rst_n => row_col[1].ACLR
rst_n => row_col[2].ACLR
rst_n => row_col[3].ACLR
rst_n => row_col[4].PRESET
rst_n => row_col[5].PRESET
rst_n => row_col[6].PRESET
rst_n => row_col[7].PRESET
rst_n => flag~reg0.ACLR
rst_n => cnt_key[0].ACLR
rst_n => cnt_key[1].ACLR
rst_n => cnt_key[2].ACLR
rst_n => cnt_key[3].ACLR
rst_n => cnt_key[4].ACLR
rst_n => cnt_key[5].ACLR
rst_n => cnt_key[6].ACLR
rst_n => cnt_key[7].ACLR
rst_n => col[0]~reg0.ACLR
rst_n => col[1]~reg0.ACLR
rst_n => col[2]~reg0.ACLR
rst_n => col[3]~reg0.ACLR
rst_n => data~3.OUTPUTSELECT
rst_n => data~2.OUTPUTSELECT
rst_n => data~1.OUTPUTSELECT
rst_n => data~0.OUTPUTSELECT
rst_n => count[31].ACLR
rst_n => count[30].ACLR
rst_n => count[29].ACLR
rst_n => count[28].ACLR
rst_n => count[27].ACLR
rst_n => count[26].ACLR
rst_n => count[25].ACLR
rst_n => count[24].ACLR
rst_n => count[23].ACLR
rst_n => count[22].ACLR
rst_n => count[21].ACLR
rst_n => count[20].ACLR
rst_n => count[19].ACLR
rst_n => count[18].ACLR
rst_n => count[17].ACLR
rst_n => count[16].ACLR
rst_n => count[15].ACLR
rst_n => count[14].ACLR
rst_n => count[13].ACLR
rst_n => count[12].ACLR
rst_n => count[11].ACLR
rst_n => count[10].ACLR
rst_n => count[9].ACLR
rst_n => count[8].ACLR
rst_n => count[7].ACLR
rst_n => count[6].ACLR
rst_n => count[5].ACLR
rst_n => count[4].ACLR
rst_n => count[3].ACLR
rst_n => count[2].ACLR
rst_n => count[1].ACLR
rst_n => count[0].ACLR
col[0] <= col[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col[1] <= col[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col[2] <= col[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col[3] <= col[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
row[0] => row_col~3.DATAA
row[0] => Equal1.IN0
row[1] => row_col~2.DATAA
row[1] => Equal1.IN1
row[2] => row_col~1.DATAA
row[2] => Equal1.IN2
row[3] => row_col~0.DATAA
row[3] => Equal1.IN3
data[0] <= data~3.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data~2.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data~1.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data~0.DB_MAX_OUTPUT_PORT_TYPE
flag <= flag~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|pre_seg7:p1
clk => data8[31]~reg0.CLK
clk => data8[30]~reg0.CLK
clk => data8[29]~reg0.CLK
clk => data8[28]~reg0.CLK
clk => data8[27]~reg0.CLK
clk => data8[26]~reg0.CLK
clk => data8[25]~reg0.CLK
clk => data8[24]~reg0.CLK
clk => data8[23]~reg0.CLK
clk => data8[22]~reg0.CLK
clk => data8[21]~reg0.CLK
clk => data8[20]~reg0.CLK
clk => data8[19]~reg0.CLK
clk => data8[18]~reg0.CLK
clk => data8[17]~reg0.CLK
clk => data8[16]~reg0.CLK
clk => data8[15]~reg0.CLK
clk => data8[14]~reg0.CLK
clk => data8[13]~reg0.CLK
clk => data8[12]~reg0.CLK
clk => data8[11]~reg0.CLK
clk => data8[10]~reg0.CLK
clk => data8[9]~reg0.CLK
clk => data8[8]~reg0.CLK
clk => data8[7]~reg0.CLK
clk => data8[6]~reg0.CLK
clk => data8[5]~reg0.CLK
clk => data8[4]~reg0.CLK
clk => data8[3]~reg0.CLK
clk => data8[2]~reg0.CLK
clk => data8[1]~reg0.CLK
clk => data8[0]~reg0.CLK
rst_n => data8[31]~reg0.ACLR
rst_n => data8[30]~reg0.ACLR
rst_n => data8[29]~reg0.ACLR
rst_n => data8[28]~reg0.ACLR
rst_n => data8[27]~reg0.ACLR
rst_n => data8[26]~reg0.ACLR
rst_n => data8[25]~reg0.ACLR
rst_n => data8[24]~reg0.ACLR
rst_n => data8[23]~reg0.ACLR
rst_n => data8[22]~reg0.ACLR
rst_n => data8[21]~reg0.ACLR
rst_n => data8[20]~reg0.ACLR
rst_n => data8[19]~reg0.ACLR
rst_n => data8[18]~reg0.ACLR
rst_n => data8[17]~reg0.ACLR
rst_n => data8[16]~reg0.ACLR
rst_n => data8[15]~reg0.ACLR
rst_n => data8[14]~reg0.ACLR
rst_n => data8[13]~reg0.ACLR
rst_n => data8[12]~reg0.ACLR
rst_n => data8[11]~reg0.ACLR
rst_n => data8[10]~reg0.ACLR
rst_n => data8[9]~reg0.ACLR
rst_n => data8[8]~reg0.ACLR
rst_n => data8[7]~reg0.ACLR
rst_n => data8[6]~reg0.ACLR
rst_n => data8[5]~reg0.ACLR
rst_n => data8[4]~reg0.ACLR
rst_n => data8[3]~reg0.ACLR
rst_n => data8[2]~reg0.ACLR
rst_n => data8[1]~reg0.ACLR
rst_n => data8[0]~reg0.ACLR
data[0] => data8[0]~reg0.DATAIN
data[1] => data8[1]~reg0.DATAIN
data[2] => data8[2]~reg0.DATAIN
data[3] => data8[3]~reg0.DATAIN
flag => data8[0]~reg0.ENA
flag => data8[31]~reg0.ENA
flag => data8[30]~reg0.ENA
flag => data8[29]~reg0.ENA
flag => data8[28]~reg0.ENA
flag => data8[27]~reg0.ENA
flag => data8[26]~reg0.ENA
flag => data8[25]~reg0.ENA
flag => data8[24]~reg0.ENA
flag => data8[23]~reg0.ENA
flag => data8[22]~reg0.ENA
flag => data8[21]~reg0.ENA
flag => data8[20]~reg0.ENA
flag => data8[19]~reg0.ENA
flag => data8[18]~reg0.ENA
flag => data8[17]~reg0.ENA
flag => data8[16]~reg0.ENA
flag => data8[15]~reg0.ENA
flag => data8[14]~reg0.ENA
flag => data8[13]~reg0.ENA
flag => data8[12]~reg0.ENA
flag => data8[11]~reg0.ENA
flag => data8[10]~reg0.ENA
flag => data8[9]~reg0.ENA
flag => data8[8]~reg0.ENA
flag => data8[7]~reg0.ENA
flag => data8[6]~reg0.ENA
flag => data8[5]~reg0.ENA
flag => data8[4]~reg0.ENA
flag => data8[3]~reg0.ENA
flag => data8[2]~reg0.ENA
flag => data8[1]~reg0.ENA
data8[0] <= data8[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[1] <= data8[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[2] <= data8[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[3] <= data8[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[4] <= data8[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[5] <= data8[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[6] <= data8[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[7] <= data8[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[8] <= data8[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[9] <= data8[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[10] <= data8[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[11] <= data8[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[12] <= data8[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[13] <= data8[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[14] <= data8[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[15] <= data8[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[16] <= data8[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[17] <= data8[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[18] <= data8[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[19] <= data8[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[20] <= data8[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[21] <= data8[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[22] <= data8[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[23] <= data8[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[24] <= data8[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[25] <= data8[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[26] <= data8[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[27] <= data8[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[28] <= data8[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[29] <= data8[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[30] <= data8[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data8[31] <= data8[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|seg7:s7
rst_n => hex~6.OUTPUTSELECT
rst_n => hex~5.OUTPUTSELECT
rst_n => hex~4.OUTPUTSELECT
rst_n => hex~3.OUTPUTSELECT
rst_n => hex~2.OUTPUTSELECT
rst_n => hex~1.OUTPUTSELECT
rst_n => hex~0.OUTPUTSELECT
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0
hex[0] <= hex~6.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex~5.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex~4.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex~3.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex~2.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex~1.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= hex~0.DB_MAX_OUTPUT_PORT_TYPE


|top|seg7:s6
rst_n => hex~6.OUTPUTSELECT
rst_n => hex~5.OUTPUTSELECT
rst_n => hex~4.OUTPUTSELECT
rst_n => hex~3.OUTPUTSELECT
rst_n => hex~2.OUTPUTSELECT
rst_n => hex~1.OUTPUTSELECT
rst_n => hex~0.OUTPUTSELECT
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0
hex[0] <= hex~6.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex~5.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex~4.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex~3.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex~2.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex~1.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= hex~0.DB_MAX_OUTPUT_PORT_TYPE


|top|seg7:s5
rst_n => hex~6.OUTPUTSELECT
rst_n => hex~5.OUTPUTSELECT
rst_n => hex~4.OUTPUTSELECT
rst_n => hex~3.OUTPUTSELECT
rst_n => hex~2.OUTPUTSELECT
rst_n => hex~1.OUTPUTSELECT
rst_n => hex~0.OUTPUTSELECT
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0
hex[0] <= hex~6.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex~5.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex~4.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex~3.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex~2.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex~1.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= hex~0.DB_MAX_OUTPUT_PORT_TYPE


|top|seg7:s4
rst_n => hex~6.OUTPUTSELECT
rst_n => hex~5.OUTPUTSELECT
rst_n => hex~4.OUTPUTSELECT
rst_n => hex~3.OUTPUTSELECT
rst_n => hex~2.OUTPUTSELECT
rst_n => hex~1.OUTPUTSELECT
rst_n => hex~0.OUTPUTSELECT
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0
hex[0] <= hex~6.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex~5.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex~4.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex~3.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex~2.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex~1.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= hex~0.DB_MAX_OUTPUT_PORT_TYPE


|top|seg7:s3
rst_n => hex~6.OUTPUTSELECT
rst_n => hex~5.OUTPUTSELECT
rst_n => hex~4.OUTPUTSELECT
rst_n => hex~3.OUTPUTSELECT
rst_n => hex~2.OUTPUTSELECT
rst_n => hex~1.OUTPUTSELECT
rst_n => hex~0.OUTPUTSELECT
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0
hex[0] <= hex~6.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex~5.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex~4.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex~3.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex~2.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex~1.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= hex~0.DB_MAX_OUTPUT_PORT_TYPE


|top|seg7:s2
rst_n => hex~6.OUTPUTSELECT
rst_n => hex~5.OUTPUTSELECT
rst_n => hex~4.OUTPUTSELECT
rst_n => hex~3.OUTPUTSELECT
rst_n => hex~2.OUTPUTSELECT
rst_n => hex~1.OUTPUTSELECT
rst_n => hex~0.OUTPUTSELECT
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0
hex[0] <= hex~6.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex~5.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex~4.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex~3.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex~2.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex~1.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= hex~0.DB_MAX_OUTPUT_PORT_TYPE


|top|seg7:s1
rst_n => hex~6.OUTPUTSELECT
rst_n => hex~5.OUTPUTSELECT
rst_n => hex~4.OUTPUTSELECT
rst_n => hex~3.OUTPUTSELECT
rst_n => hex~2.OUTPUTSELECT
rst_n => hex~1.OUTPUTSELECT
rst_n => hex~0.OUTPUTSELECT
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0
hex[0] <= hex~6.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex~5.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex~4.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex~3.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex~2.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex~1.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= hex~0.DB_MAX_OUTPUT_PORT_TYPE


|top|seg7:s0
rst_n => hex~6.OUTPUTSELECT
rst_n => hex~5.OUTPUTSELECT
rst_n => hex~4.OUTPUTSELECT
rst_n => hex~3.OUTPUTSELECT
rst_n => hex~2.OUTPUTSELECT
rst_n => hex~1.OUTPUTSELECT
rst_n => hex~0.OUTPUTSELECT
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0
hex[0] <= hex~6.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex~5.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex~4.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex~3.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex~2.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex~1.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= hex~0.DB_MAX_OUTPUT_PORT_TYPE


